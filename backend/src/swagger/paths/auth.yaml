# Authentication Endpoints

/auth/register:
  post:
    tags:
      - Authentication
    summary: Register a new user
    description: Creates a new user account and sends verification email
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisterRequest'
    responses:
      '201':
        description: User registered successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterSuccessResponse'
      '400':
        description: Bad request - Validation error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationErrorResponse'
      '409':
        description: Conflict - Email already exists
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthErrorResponse'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

/auth/verify:
  post:
    tags:
      - Authentication
    summary: Verify user email
    description: Verifies user email using the verification code sent to their email
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VerifyEmailRequest'
    responses:
      '200':
        description: Email verified successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthSuccessResponse'
      '400':
        description: Invalid verification code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationErrorResponse'
      '404':
        description: User not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthErrorResponse'

/auth/login:
  post:
    tags:
      - Authentication
    summary: User login
    description: Authenticates user and returns access and refresh tokens
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginRequest'
    responses:
      '200':
        description: Login successful
        headers:
          Set-Cookie:
            description: Access and refresh tokens set as HTTP-only cookies
            schema:
              type: string
              example: "accessToken=jwt_token_here; HttpOnly; Secure; SameSite=Strict"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthSuccessResponse'
      '400':
        description: Validation error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationErrorResponse'
      '401':
        description: Invalid credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthErrorResponse'
      '403':
        description: Email not verified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthErrorResponse'

/auth/logout:
  post:
    tags:
      - Authentication
    summary: User logout
    description: Logs out user and clears authentication cookies
    security:
      - bearerAuth: []
      - cookieAuth: []
    responses:
      '200':
        description: Logout successful
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicSuccessResponse'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthErrorResponse'

/auth/refresh-token:
  post:
    tags:
      - Authentication
    summary: Refresh access token
    description: Generates new access token using refresh token
    security:
      - cookieAuth: []
    responses:
      '200':
        description: Token refreshed successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenResponse'
      '401':
        description: Invalid refresh token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthErrorResponse'

/auth/forgot-password:
  post:
    tags:
      - Authentication
    summary: Forgot password
    description: Sends password reset code to user's email
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForgotPasswordRequest'
    responses:
      '200':
        description: Password reset code sent
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicSuccessResponse'
      '400':
        description: Validation error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationErrorResponse'
      '404':
        description: User not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthErrorResponse'

/auth/check-verification-code:
  post:
    tags:
      - Authentication
    summary: Check verification code
    description: Validates the verification code for password reset
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckVerificationCodeRequest'
    responses:
      '200':
        description: Verification code is valid
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicSuccessResponse'
      '400':
        description: Invalid verification code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationErrorResponse'
      '404':
        description: User not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthErrorResponse'

/auth/reset-password:
  post:
    tags:
      - Authentication
    summary: Reset password
    description: Resets user password using verification code
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResetPasswordRequest'
    responses:
      '200':
        description: Password reset successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicSuccessResponse'
      '400':
        description: Invalid verification code or password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationErrorResponse'
      '404':
        description: User not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthErrorResponse'

/auth/resend-verification-code:
  post:
    tags:
      - Authentication
    summary: Resend verification code
    description: Resends verification code to user's email
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResendVerificationCodeRequest'
    responses:
      '200':
        description: Verification code resent
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicSuccessResponse'
      '400':
        description: Validation error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationErrorResponse'
      '404':
        description: User not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthErrorResponse'