# Session Endpoints

/session:
  get:
    tags:
      - Session
    summary: Get all user sessions
    description: Retrieves all active sessions for the authenticated user
    security:
      - bearerAuth: []
      - cookieAuth: []
    responses:
      '200':
        description: Sessions retrieved successfully
        content:
          application/json:
            schema:
              type: object
              required: ['local_date_time', 'data', 'api_error']
              properties:
                local_date_time:
                  type: string
                  format: date-time
                  example: '2025-10-03T10:30:00.000Z'
                data:
                  type: object
                  required: ['session', 'message']
                  properties:
                    session:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            example: "session123"
                          token:
                            type: string
                            example: "refresh_token_hash"
                          ip_address:
                            type: string
                            example: "192.168.1.100"
                          user_agent:
                            type: string
                            example: "Mozilla/5.0 (Windows NT 10.0; Win64; x64)"
                          expire_at:
                            type: string
                            format: date-time
                            example: "2023-10-01T22:00:00Z"
                          created_at:
                            type: string
                            format: date-time
                            example: "2023-10-01T10:00:00Z"
                          user_id:
                            type: string
                            example: "user123"
                    message:
                      type: string
                      example: "All session Retrived"
                api_error:
                  type: null
                  example: null
      '401':
        description: Unauthorized - User not authenticated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthErrorResponse'

/session/all-except-current:
  delete:
    tags:
      - Session
    summary: Delete all sessions except current
    description: Deletes all user sessions except the current one
    security:
      - bearerAuth: []
      - cookieAuth: []
    responses:
      '200':
        description: Sessions deleted successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicSuccessResponse'
            example:
              local_date_time: '2025-10-03T10:30:00.000Z'
              data:
                message: "Session successfully deleted"
              api_error: null
      '401':
        description: Unauthorized - User not authenticated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthErrorResponse'

/session/{session_id}:
  delete:
    tags:
      - Session
    summary: Delete specific session
    description: Deletes a specific session by session ID
    security:
      - bearerAuth: []
      - cookieAuth: []
    parameters:
      - in: path
        name: session_id
        required: true
        schema:
          type: string
        description: Session ID to delete
        example: "session123"
    responses:
      '200':
        description: Session deleted successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicSuccessResponse'
            example:
              local_date_time: '2025-10-03T10:30:00.000Z'
              data:
                message: "Session successfully deleted"
              api_error: null
      '400':
        description: Bad request - Session ID is empty or session doesn't exist
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthErrorResponse'
      '401':
        description: Unauthorized - User not authenticated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthErrorResponse'