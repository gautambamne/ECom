# Category Endpoints

/categories:
  get:
    tags:
      - Categories
    summary: Get all categories
    description: Retrieves a paginated list of all product categories
    parameters:
      - in: query
        name: page
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
        example: 1
      - in: query
        name: limit
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of items per page
        example: 10
      - in: query
        name: search
        schema:
          type: string
        description: Search term to filter categories by name
        example: "sneakers"
    responses:
      '200':
        description: Categories retrieved successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
            example:
              local_date_time: "2025-10-04T10:00:00.000Z"
              data:
                categories:
                  - id: "cat123"
                    name: "Sneakers"
                  - id: "cat124"
                    name: "Boots"
                pagination:
                  page: 1
                  limit: 10
                  total: 2
                  pages: 1
              api_error: null
      '400':
        description: Bad request - Invalid query parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

  post:
    tags:
      - Categories
    summary: Create a new category (Admin only)
    description: Creates a new product category. Only admins can create categories.
    security:
      - bearerAuth: []
      - cookieAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required: [name]
            properties:
              name:
                type: string
                description: Category name
                example: "Running Shoes"
    responses:
      '201':
        description: Category created successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
            example:
              local_date_time: "2025-10-04T10:00:00.000Z"
              data:
                category:
                  id: "cat125"
                  name: "Running Shoes"
                message: "Category created successfully"
              api_error: null
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      '403':
        description: Forbidden - Not an admin
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      '400':
        description: Bad request - Invalid input or category name already exists
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

/categories/{id}:
  get:
    tags:
      - Categories
    summary: Get category by ID
    description: Retrieves a specific category by its ID
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: Category ID
        example: "cat123"
    responses:
      '200':
        description: Category retrieved successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
            example:
              local_date_time: "2025-10-04T10:00:00.000Z"
              data:
                category:
                  id: "cat123"
                  name: "Sneakers"
              api_error: null
      '400':
        description: Bad request - Invalid category ID
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      '404':
        description: Category not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

  patch:
    tags:
      - Categories
    summary: Update category (Admin only)
    description: Updates a category. Only admins can update categories.
    security:
      - bearerAuth: []
      - cookieAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: Category ID
        example: "cat123"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: Category name
                example: "Athletic Sneakers"
    responses:
      '200':
        description: Category updated successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
            example:
              local_date_time: "2025-10-04T10:00:00.000Z"
              data:
                category:
                  id: "cat123"
                  name: "Athletic Sneakers"
                message: "Category updated successfully"
              api_error: null
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      '403':
        description: Forbidden - Not an admin
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      '400':
        description: Bad request - Invalid input or category name already exists
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      '404':
        description: Category not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

  delete:
    tags:
      - Categories
    summary: Delete category (Admin only)
    description: Deletes a category. Only admins can delete categories. Cannot delete categories that have associated products.
    security:
      - bearerAuth: []
      - cookieAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: Category ID
        example: "cat123"
    responses:
      '200':
        description: Category deleted successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
            example:
              local_date_time: "2025-10-04T10:00:00.000Z"
              data:
                message: "Category deleted successfully"
              api_error: null
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      '403':
        description: Forbidden - Not an admin
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      '400':
        description: Bad request - Category has associated products
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      '404':
        description: Category not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'