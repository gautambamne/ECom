# Order Endpoints

/orders:
  get:
    tags:
      - Orders
    summary: Get user's orders
    description: Retrieves all orders for the authenticated user with optional filtering and pagination
    security:
      - bearerAuth: []
      - cookieAuth: []
    parameters:
      - in: query
        name: status
        schema:
          type: string
          enum: [PENDING, CONFIRMED, SHIPPED, DELIVERED, CANCELLED]
        description: Filter orders by status
        example: "CONFIRMED"
      - in: query
        name: page
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number for pagination
        example: 1
      - in: query
        name: limit
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of orders per page
        example: 10
    responses:
      '200':
        description: Orders retrieved successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersListResponse'
            example:
              local_date_time: "2025-10-04T10:00:00.000Z"
              data:
                orders:
                  - id: "order123"
                    user_id: "user123"
                    status: "CONFIRMED"
                    total_price: 179.98
                    created_at: "2023-10-01T10:00:00.000Z"
                    items:
                      - id: "orderItem123"
                        product_id: "prod123"
                        quantity: 2
                        price: 89.99
                        product:
                          id: "prod123"
                          name: "Nike Air Force 1"
                          price: 89.99
                          images: ["https://example.com/image1.jpg"]
                          brand: "Nike"
                          stock: 50
                    payment:
                      id: "payment123"
                      amount: 179.98
                      status: "SUCCESS"
                      method: "card"
                message: "Orders retrieved successfully"
              api_error: null
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

  post:
    tags:
      - Orders
    summary: Create a new order
    description: Creates a new order from the user's cart items
    security:
      - bearerAuth: []
      - cookieAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                description: Specific cart items to include in the order (optional - uses entire cart if not provided)
                items:
                  type: object
                  required: [productId, quantity]
                  properties:
                    productId:
                      type: string
                      description: Product ID
                      example: "prod123"
                    quantity:
                      type: integer
                      minimum: 1
                      description: Quantity to order
                      example: 2
    responses:
      '201':
        description: Order created successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreateResponse'
            example:
              local_date_time: "2025-10-04T10:00:00.000Z"
              data:
                order:
                  id: "order123"
                  user_id: "user123"
                  status: "PENDING"
                  total_price: 179.98
                  created_at: "2023-10-01T10:00:00.000Z"
                  items:
                    - id: "orderItem123"
                      product_id: "prod123"
                      quantity: 2
                      price: 89.99
                      product:
                        id: "prod123"
                        name: "Nike Air Force 1"
                        price: 89.99
                        images: ["https://example.com/image1.jpg"]
                        brand: "Nike"
                        stock: 50
                  payment: null
                message: "Order created successfully"
              api_error: null
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      '400':
        description: Bad request - Empty cart or invalid data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

/orders/{orderId}:
  get:
    tags:
      - Orders
    summary: Get order by ID
    description: Retrieves a specific order by its ID. Users can only access their own orders.
    security:
      - bearerAuth: []
      - cookieAuth: []
    parameters:
      - in: path
        name: orderId
        required: true
        schema:
          type: string
        description: Order ID
        example: "order123"
    responses:
      '200':
        description: Order retrieved successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderResponse'
            example:
              local_date_time: "2025-10-04T10:00:00.000Z"
              data:
                order:
                  id: "order123"
                  user_id: "user123"
                  status: "CONFIRMED"
                  total_price: 179.98
                  created_at: "2023-10-01T10:00:00.000Z"
                  items:
                    - id: "orderItem123"
                      product_id: "prod123"
                      quantity: 2
                      price: 89.99
                      product:
                        id: "prod123"
                        name: "Nike Air Force 1"
                        price: 89.99
                        images: ["https://example.com/image1.jpg"]
                        brand: "Nike"
                        stock: 50
                  payment:
                    id: "payment123"
                    amount: 179.98
                    status: "SUCCESS"
                    method: "card"
                message: "Order retrieved successfully"
              api_error: null
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      '404':
        description: Order not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      '403':
        description: Forbidden - Not the order owner
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

/orders/{orderId}/cancel:
  patch:
    tags:
      - Orders
    summary: Cancel order
    description: Cancels an order. Only pending or confirmed orders can be cancelled by their owner.
    security:
      - bearerAuth: []
      - cookieAuth: []
    parameters:
      - in: path
        name: orderId
        required: true
        schema:
          type: string
        description: Order ID
        example: "order123"
    responses:
      '200':
        description: Order cancelled successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderResponse'
            example:
              local_date_time: "2025-10-04T10:00:00.000Z"
              data:
                order:
                  id: "order123"
                  user_id: "user123"
                  status: "CANCELLED"
                  total_price: 179.98
                  created_at: "2023-10-01T10:00:00.000Z"
                  items: [...]
                  payment: {...}
                message: "Order cancelled successfully"
              api_error: null
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      '404':
        description: Order not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      '403':
        description: Forbidden - Not the order owner
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      '400':
        description: Bad request - Order cannot be cancelled at this stage
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

/orders/{orderId}/status:
  patch:
    tags:
      - Orders
    summary: Update order status (Admin/Vendor only)
    description: Updates the status of an order. Only admins or vendors can update order status.
    security:
      - bearerAuth: []
      - cookieAuth: []
    parameters:
      - in: path
        name: orderId
        required: true
        schema:
          type: string
        description: Order ID
        example: "order123"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required: [status]
            properties:
              status:
                type: string
                enum: [PENDING, CONFIRMED, SHIPPED, DELIVERED, CANCELLED]
                description: New order status
                example: "SHIPPED"
    responses:
      '200':
        description: Order status updated successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderResponse'
            example:
              local_date_time: "2025-10-04T10:00:00.000Z"
              data:
                order:
                  id: "order123"
                  user_id: "user123"
                  status: "SHIPPED"
                  total_price: 179.98
                  created_at: "2023-10-01T10:00:00.000Z"
                  items: [...]
                  payment: {...}
                message: "Order status updated successfully"
              api_error: null
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      '403':
        description: Forbidden - Not authorized to update order status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      '404':
        description: Order not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      '400':
        description: Bad request - Invalid status transition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'